node{

def mavenHome = tool name: "maven3.8.6"

echo "Jenkins url is: ${env.JENKINS_URL}"
echo "Node Name is: ${env.NODE_NAME}"
echo "Job name is: ${env.JOB_NAME}"




properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])


try{
slacknotifications'STARTED'

stage('CheckOutCode'){
git branch: 'dev', credentialsId: 'e6240bb6-8a73-4376-9fb6-812ec4814f49', url: 'https://github.com/akawasthi0303/maven-web-application.git'
}

stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}

stage('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn clean sonar:sonar"
}

stage('UploadArtifcatsIntoArtifactoryRepo'){
sh "${mavenHome}/bin/mvn clean deploy"
}

stage('DeployAppIntoTomcatServer'){
sshagent(['9fa5981c-65d9-4cce-b5f6-9397a994eecd']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war  ec2-user@13.233.42.39:/opt/apache-tomcat-9.0.65/webapps/"
} 
}
}//try block closing
catch (e){
slacknotifications('FAILED')
throw e 
}
finally{
slacknotifications(currentBuild.result)
}

}//Node Closing

//Code Snippet For sending slack-notifications
def slacknotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
